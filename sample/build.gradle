import com.thoughtworks.gauge.gradle.GaugeTask

plugins {
    id 'java'
    id 'org.gauge' version '1.8.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

sourceSets {
    spec {
        java.srcDirs('src/spec/')
    }
    test {
        compileClasspath += sourceSets.spec.runtimeClasspath
        runtimeClasspath += sourceSets.spec.runtimeClasspath
    }
}

dependencies {
    specImplementation 'com.thoughtworks.gauge:gauge-java:+'
    testImplementation 'com.thoughtworks.gauge:gauge-java:+'
    testImplementation 'net.sourceforge.htmlunit:webdriver:2.6'
    testImplementation 'junit:junit:4.13.2'
}

gauge {
    specsDir = 'specs'
    inParallel = true
    nodes = 4
    env = 'ci'
    additionalFlags = '--verbose'
}

task gaugeDev(type: GaugeTask) {
    doFirst {
        gauge {
            specsDir = 'specs'
            inParallel = true
            nodes = 2
            env = 'dev'
            additionalFlags = '--verbose'
        }
    }
}

task gaugeTest(type: GaugeTask) {
    doFirst {
        gauge {
            specsDir = 'specs'
            inParallel = true
            nodes = 4
            env = 'test'
            additionalFlags = '--verbose'
        }
    }
}

task gaugeCi(type: GaugeTask) {
    doFirst {
        gauge {
            specsDir = 'specs'
            inParallel = true
            nodes = 3
            env = 'ci'
            additionalFlags = '--verbose'
        }
    }
}

//gaugeNew {
//    tags = "property"
//}
//
//
//task haroon() {
//    doFirst {
//        gaugeNew {
//            tags = "inner"
//        }
//        println(gaugeNew.tags.get())
//    }
//}